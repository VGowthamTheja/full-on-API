continue
RESPONSE
JSON.parse(response.body)
response
RESPONSE
continue
Project.find_by(manager_id: 1)
Project.find_by(manager_id: 3)
post '/projects',params:{ project: {"title"=>'A binary project', "content"=>'One mail binary actions project to make testing easy.', "budget"=>'2,000,000', "manager_id"=>1 }}
Project.find_by(manager_id: 3)
@response
reponse
post '/projects',params:{ project: {"title"=>'A binary project', "content"=>'One mail binary actions project to make testing easy.', "budget"=>'2,000,000', "manager_id"=>3 }}
post '/projects',params:{ project: {project_mock}}
post '/projects',params:{ project: {"title"=>'A binary project', "content"=>'One mail binary actions project to make testing easy.', "budget"=>'2,000,000', "manager_id"=>3 }}
continue
post '/projects',params:{ project: {"title"=>'A binary project', "content"=>'One mail binary actions project to make testing easy.', "budget"=>'2,000,000', "manager_id"=>3 }}
post '/projects',params:{ project: {project_mock}}
post '/projects', project_mock
params: {project_mock}
params: project_mock
params :project_mock
project_mock
params: :project_mock
params: project_mock
params: { project: project_mock }
:params=>{ project: project_mock }
project_mock
continue
JSON.parse(response.body)
continue
JSON.parse(response.body)
continue
JSON.parse(response.body)
continue
params
JSON.parse(response.body)
continue
project
JSON.parse(response.body)
response
continue
session
continue
project
JSON.parse(response.body)
response.status
response.body
response
continue
User.all
continue
response.body
response
user
uer
continue
user.errors
:user.valid?
:user
user.valid?
user
response.body.valid?
response.valid?
response.body
response
user
assigns(:user)
continue
subject
continue
response.media_type
response.content_type
continue
contniue
response.content_type
continue
response.media_type
response
continue
Project.all
continue
project
User.all
Project.all
            .budget AS budget").joins('INNER JOIN users ON users.id = projects.manager_id').to_sql
            projects.content AS content, users.user_name AS manager, projects
Project.select("projects.id AS p_id, users.id AS u_id, projects.title AS title,
response.body
response
continue
user
project
continue
project
user
response.body
response.bdoy
continue
user
JSON.parse(response.body)
continue
user
JSON.parse(response.body)
continue
JSON.parse(response.body)
response.body
continue
response.body
continue
User.all
continue
User.all
response.body
continue
User.all
response.status
response.body
response
continue
response.body
continue
User.first
response.body
response
project
user
continue
project
user
response.body
response
continue
user3
continue
user1
continue
user1
continue
response
continue
data.find{|item| item["u_id"] == id}
user
continue
User.all
User.first
user
id
data.find{|item| item["u_id"] == id}
data.find{|item| item.u_id == id}
data
continue
record
continue
Project.all
record
continue
record
records
continue
response.body
response
continue
project.errors
project.update!(permitted_params)
project.errors
project.erros
continue
user.authenticate(params['user']['password'])
user.authenticate(params['user']['current_password'])
user
continue
params['user']['current_password']
params['current_password']
params['user']['current_params']
params['current_params']
reset_password_params['current_password']
reset_password_params
params
continue
user
params
continue
user.update(user_name: params['user']["firstname"]+" "+params['user']["lastname"], address: params['user']["address"], dob: params['user']["dob"], password_digest: params['user']["password_digest"])
continue
user.errors
user.update(user_name: params['user']["firstname"]+" "+params['user']["lastname"], address: params['user']["address"], dob: params['user']["dob"], password_digest: params['user']["password_digest"])
user.errors
user.error
user
params['user']
params
continue
params
record
continue
project.update(budget: '10,000,000')
params['project']['budget']
project.update(params['project'])
params['project']
params
project
continue
@current_user.role
session
@current_user
continue
session
@current_user
continue
continur
current_user
user
session
continue
session
